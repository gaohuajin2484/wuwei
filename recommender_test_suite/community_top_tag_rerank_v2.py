'''
@File  :community_top_tag_rerank_v2.py
@Author:gaohuajin
@Date  :9/27/2110:54 AM
@Desc  :重排策略community_top_tag_rerank_v2，根据笔记的一级类目实现打散功能，相邻3个笔记的一级类目不能相同。
'''
import pandas,copy

class Community_top_tag_rerank_v2:
    def __init__(self, item_ids):
        self.item_ids = item_ids
        self.item_id_and_first_id_list = self.get_item_id_and_first_id()
        print(self.item_id_and_first_id_list)

    def get_item_id_and_first_id(self):
        result = []
        item_id_and_first_id_dict = {}
        path = "/Users/gaohuajin/Downloads/beb413b6-9cf3-4db6-8875-e1822382a2f5.csv"
        pd = pandas.read_csv(path, low_memory=False)
        for i in self.item_ids:
            for j in pd.values.tolist():
                if i == j[0]:
                    item_id_and_first_id_dict[i] = j[1]
                    copy_dict = copy.deepcopy(item_id_and_first_id_dict)
                    result.append(copy_dict)
                    item_id_and_first_id_dict.clear()
                    break

        return result


    def eq_check(self):
        i = 2
        for i in range(len(self.item_id_and_first_id_list)):
            if self.item_id_and_first_id_list[i][self.item_ids[i]] != self.item_id_and_first_id_list[i - 1][
                self.item_ids[i - 1]] and self.item_id_and_first_id_list[i][self.item_ids[i]] != \
                    self.item_id_and_first_id_list[i - 2][self.item_ids[i - 2]]:
                print("测试通过，重排策略community_top_tag_rerank_v2的结果数据没有问题")
            else:
                print("测试失败,重排策略community_top_tag_rerank_v2存在问题的数据有 {}:{}:{},{}:{}:{},{}:{}:{}".format(i - 2, self.item_ids[i - 2],
                                                          self.item_id_and_first_id_list[i - 2][self.item_ids[i - 2]],
                                                          i - 1, self.item_ids[i - 1],
                                                          self.item_id_and_first_id_list[i - 1][self.item_ids[i - 1]],
                                                          i, self.item_ids[i],
                                                          self.item_id_and_first_id_list[i][self.item_ids[i]]))


if __name__ == '__main__':
    items_id = [1576794, 1411501, 1600831, 1510095, 1477570, 1436714, 1588834, 1434118, 1443662, 1515418, 1504317,
                1576855, 1592640, 1494347, 1438337, 1534987, 1553161, 1585897, 1576774, 1501987, 1576819, 1445063,
                1594649, 1467466, 1515678, 1449026, 1477154, 1592222, 1479661, 1589354, 1485039, 1459968, 1442176,
                1597708, 1454019, 1588867, 1417374, 1585604, 1446146, 1603129, 1591254, 1493636, 1590046, 1502155,
                1445074, 1534922, 1449804, 1587881, 1445067, 1552285, 1566380, 1585685, 1469996, 1559614, 1601541,
                1509000, 1445077, 1470346, 1445086, 1519846, 1494162, 1466294, 1603675, 1442677, 1539504, 1431633,
                1539068, 1595730, 1417373, 1550325, 1482281, 1514838, 1561035, 1562984, 1534379, 1564549, 1486208,
                1567022, 1458031, 1424755, 1561290, 1597990, 1445310, 1581037, 1589071, 1430591, 1455804, 1568632,
                1537235, 1594410, 1457739, 1472040, 1499181, 1587023, 1536243, 1597716, 1461533, 1585243, 1536278,
                1457564, 1446701, 1586185, 1581657, 1502632, 1561715, 1569455, 1445255, 1590070, 1518624, 1422870,
                1445167, 1549931, 1536272, 1484766, 1431319, 1592439, 1595135, 1607348, 1477466, 1536259, 1429992,
                1568335, 1434174, 1564635, 1584617, 1555189, 1536285, 1603599, 1497598, 1536283, 1568656, 1551401,
                1450059, 1574404, 1566322, 1516616, 1603201, 1567381, 1594331, 1432427, 1560826, 1528562, 1492333,
                1536240, 1593808, 1522931, 1473880, 1491635, 1604367, 1476560, 1538648, 1570391, 1606909, 1605895,
                1572358, 1603501, 1613660, 1584597, 1509017, 1594251, 1600940, 1492798, 1544624, 1603635, 1434115,
                1604114, 1434120, 1596368, 1571574, 1516599, 1600978, 1607002, 1531835, 1583590, 1587031, 1425571,
                1574170, 1582714, 1601446, 1580774, 1601413, 1573901, 1493044, 1528223, 1607040, 1536289, 1604220,
                1572005, 1601590, 1492813, 1550215, 1596723, 1534808, 1607248, 1600263, 1574390, 1436304, 1604195,
                1558041, 1603392, 1574406, 1607073, 1573337, 684812, 1420698, 1420365, 1601832, 1305991, 1567769,
                1601830, 1601922, 1468039, 1601807, 1457754, 1600163, 1605387, 1602605, 1595100, 1600332, 1603778,
                1602722, 1549703, 1600230, 1417545, 1600605, 1457769, 1602226, 1587288, 1599665, 1598857, 1600318,
                1508815, 1538843, 1607543, 1600216, 1607486, 1541482, 1577408, 1543507, 1444303, 1555934, 1419776,
                1424636, 1602457, 1421629, 1486650, 1417846, 1607532, 1517395, 1445805, 1543685, 733781, 1421650,
                1433607, 1602370, 1241299, 1603623, 1234653, 1419249, 1606191, 1603917, 1297434, 1520575, 604409,
                1406925, 1290178, 1225824, 1237879, 1005536, 1417413, 575527, 1417412, 649165, 1303860, 860155, 1309813,
                554025, 676379, 562128, 1446971, 1398733, 1417407, 1096766, 1417409, 850924, 1417631, 718747, 1417627,
                495306, 1417633, 853301, 1417415, 996613, 597465, 1029610, 1416638, 513571, 680051, 584146, 1528349,
                1058338, 673261, 1229657, 1285345, 532924, 1206445, 607648, 1402205, 598368, 834384, 396379, 1361741,
                766778, 851932, 669580, 1369147, 1312907, 1407368, 1311405, 653044, 819676, 1396441, 1189457, 1367294,
                989801, 1268123, 769962, 507406, 1122458, 513569, 1304521, 849844, 916992, 763330, 679366, 1197233,
                654437, 608861, 1261736, 1311161, 558839, 1266200, 591752, 1338102, 593100, 472584, 1321488, 485159,
                621076, 1164863, 1402179, 1310149, 1348509, 551669, 1403327, 513295, 627656, 544551, 1309001, 1325285,
                638258, 1291997, 681399, 600762, 679339, 440821, 688012, 554942, 1402291, 446168, 593753, 1308677,
                1299483, 682028, 1305062, 601736, 687938, 971358, 1167942, 682204, 597638, 681986, 681689, 715149,
                599640, 816992, 598741, 1127157, 661006, 1070817, 605675, 1300957, 1401913, 653872, 1363617]
    run = Community_top_tag_rerank_v2(items_id)
    run.eq_check()
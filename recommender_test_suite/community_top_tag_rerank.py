'''
@File  :community_top_tag_rerank.py
@Author:gaohuajin
@Date  :9/27/2110:53 AM
@Desc  :重排策略community_top_tag_rerank，根据笔记的一级类目实现打散功能，相邻2个笔记的一级类目不能相同。
'''
import pandas,copy

class Community_top_tag_rerank:
    def __init__(self, item_ids):
        self.item_ids = item_ids
        self.item_id_and_first_id_list = self.get_item_id_and_first_id()
        print(self.item_id_and_first_id_list)

    def get_item_id_and_first_id(self):
        result = []
        item_id_and_first_id_dict = {}
        path = "/Users/gaohuajin/Downloads/beb413b6-9cf3-4db6-8875-e1822382a2f5.csv"
        pd = pandas.read_csv(path, low_memory=False)
        for i in self.item_ids:
            for j in pd.values.tolist():
                if i == j[0]:
                    item_id_and_first_id_dict[i] = j[1]
                    copy_dict = copy.deepcopy(item_id_and_first_id_dict)
                    result.append(copy_dict)
                    item_id_and_first_id_dict.clear()
                    break

        return result

    def eq_check(self):
        i = 1
        for i in range(len(self.item_id_and_first_id_list)):
            if self.item_id_and_first_id_list[i][self.item_ids[i]] != self.item_id_and_first_id_list[i - 1][
                self.item_ids[i - 1]]:
                print("测试通过，重排策略community_top_tag_rerank的结果数据没有问题")
            else:
                print("测试失败，重排策略community_top_tag_rerank存在问题的数据有 {}:{}:{},{}:{}:{}".format(i - 1, self.item_ids[i - 1],
                                                 self.item_id_and_first_id_list[i - 1][self.item_ids[i - 1]], i,
                                                 self.item_ids[i], self.item_id_and_first_id_list[i][self.item_ids[i]]))


if __name__ == '__main__':
    items_id = [1464658, 1446146, 1494347, 1436714, 1462161, 831761, 1482281, 1499530, 1158291, 1482893, 1416393, 1459793, 1483991, 1534379, 1417105, 1517165, 1456930, 1479077, 1461532, 1526995, 1095687, 1534987, 1420453, 1449020, 1486209, 1540917, 1445318, 1424309, 1561035, 1446701, 1532858, 1469100, 1486214, 1491315, 799621, 1501254, 1536499, 1486131, 1337849, 1095457, 1449836, 1369949, 1481724, 1448601, 980571, 1512078, 984391, 1445336, 1459772, 1486216, 1364474, 1525223, 1448608, 1486212, 1438337, 1459856, 1366933, 1284436, 829596, 1459832, 1344669, 1358175, 1045202, 1410806, 1365149, 980842, 1081605, 1414411, 1486210, 1416430, 1458621, 1445326, 1413573, 844864, 1405951, 1477154, 1154073, 1456942, 773232, 1058201, 581114, 1334824, 1459809, 1048000, 1532660, 1283016, 1100825, 999922, 1286612, 1365361, 514203, 1358352, 1351391, 851167, 1282621, 1442762, 1341000, 770926, 984392, 1328955, 1407381, 1039152, 1323661, 1364239, 1194914, 1311908, 1025342, 1373106, 1558707, 1595397, 1494531, 1402897, 1014783, 1354744, 850986, 1348296, 833602, 1007708, 1155553, 1029515, 850923, 1093437, 1360800, 1170553, 1577606, 1158391, 1440527, 1246436, 1509746, 1413033, 1486650, 1611090, 1476772, 1419577, 1299483, 1422674, 1252731, 1295963, 1224607, 1407127, 1460092, 1477901, 1577467, 1414393, 1403660, 1558736, 1510409, 1585847, 1463389, 1434983, 887532, 1285717, 1595086, 1401821, 1429407, 1341581, 1599626, 1515266, 1408306, 1145143, 1608964, 1362405, 1440099, 1472575, 1566076, 1415639, 1350272, 1487724, 1425559, 1399286, 1539150, 1604300, 1433102, 1015056, 1369937, 1479474, 1366701, 1460678, 1498148, 777245, 961484, 1483279, 1333583, 1613836, 1301029, 1604304, 1491985, 1364422, 1188977, 1310949, 1139338, 1579133, 1581149, 1370954, 1358327, 1308993, 1435542, 1600159, 1617172, 1614174, 1464334, 1256728, 1546664, 1403078, 1518640, 1455160, 1610532, 1289192, 1357274, 1602460, 1588098, 1242378, 1428619, 1224281, 1440169, 1286040, 1528343, 1315554, 1403121, 1288820, 1350893, 1451837, 1415115, 1541344, 1430010, 1238194, 1471332, 1533897, 1527340, 1595955, 1327846, 1199268, 1574427, 1416495, 1519604, 1433772, 1057057, 1548966, 1496207, 1157096, 1046471, 1433790, 1356740, 1194874, 896348, 1510573, 1328355, 1449218, 1548876, 1548943, 1450222, 1422464, 1194890, 1403124, 1434786, 1286242, 1098170, 1279685, 1546783, 935494, 1550118, 1513951, 1591831, 1312968, 784864, 1406246, 1577488, 1598836, 1416428, 1416429, 1478271, 1487036, 1304063, 1495827, 1196584, 1588696, 1539303, 791289, 1569959, 1607139, 1137804, 1515148, 1263901, 1606675, 1573437, 1416407, 1135672, 1510101, 1550020, 1410818, 1267677, 1108553, 1452257, 1420782, 1419984, 1571500, 1540421, 1501842, 1399295, 1263913, 1295955, 1364997, 1523026, 1328892, 1292023, 1589873, 1142421, 1055229, 1343852, 1431498, 1615609, 1481061, 1338746, 1464064, 1539208, 1087569, 1554191, 763113, 1096359, 1295973, 1489264, 1577538, 1024725, 1349005, 1225567, 1577535, 1531529, 1308310, 1611665, 1313054, 1488071, 1611901, 1611895, 1607008, 1417328, 1586973, 1124925, 1403076, 1424156, 1357494, 1548877, 1550048, 1195256, 1614587, 1550014, 1365006, 1610537, 1071001, 1010195, 1085902, 971196, 1048170, 1338049, 1419518, 1596092, 1085692, 1124568, 1262725, 791022, 1248258, 1194233, 1589896, 1576131, 1241337, 1555903, 1183465, 1238937, 1124769, 769020, 1225168, 980368, 1291603, 1555691, 780632, 1323659, 1435442, 1535374, 1334686, 1513983, 1310375, 1296723, 1310601, 1365704, 1331065, 1486103, 1339178, 1520838, 1286220, 1030250, 1450357, 1286775, 791362, 791350, 1553028, 1553068, 798312, 1372935, 1462386, 778325, 1271275]
    # run = Community_top_tag_rerank(items_id)
    # run.eq_check()
    test_id = [1446146, 1494347, 1436714, 1462161, 1499530, 1459793, 1534379, 1456930, 1461532, 1526995, 1534987, 1449020, 1445318, 1561035, 1446701, 1532858, 1469100, 1448601, 1512078, 1459856, 1459832]
    for i in test_id:
        if i in items_id[0:50]:
            print("没问题")
        else:
            print(i)